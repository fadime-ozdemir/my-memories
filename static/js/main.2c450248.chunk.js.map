{"version":3,"sources":["images/keep-memories.png","firebaseConfig.js","components/AppContext.js","components/navbar/components/AddNewAlbum.js","components/navbar/Navbar.js","components/Album/components/EditModalAlbum.js","components/Album/components/AlbumSettingMenu.js","components/Album/Album.js","components/Album/AlbumList.js","containers/AlbumListContainer.js","components/LogIn/LogIn.js","components/memory/components/EditModal.js","components/memory/components/MemorySettingMenu.js","components/memory/Memory.js","components/memory/Subnav.js","components/memory/MemoriesList.js","containers/MemoriesListContainer.js","components/profile/Profile.js","components/Home.js","containers/App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","storage","auth","AppContext","React","createContext","user","setUser","AddNewAlbum","useContext","console","log","useState","shouldRedirect","setShouldRedirect","name","userId","uid","creationDate","userInput","setUserInput","addAlbum","e","preventDefault","db","collection","add","open","setOpen","handleClose","IconButton","aria-label","color","onClick","Badge","badgeContent","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","target","value","Date","handleChange","DialogActions","Button","handleSubmit","to","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","link","textDecoration","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Navbar","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","history","useHistory","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","style","MenuItem","signOut","then","push","catch","error","renderMobileMenu","aria-controls","aria-haspopup","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","edge","EditModalAlbum","albumId","openEdit","setOpenEditModal","editAlbum","doc","update","settings","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","StyledMenuItem","primary","main","AlbumSettingMenu","album","openEditModal","size","fontSize","ListItemIcon","ListItemText","delete","minWidth","bullet","transform","pos","marginBottom","header","paddingBottom","content","paddingTop","Album","Grid","item","xs","Card","CardActions","disableSpacing","CardContent","component","data","marginTop","textAlign","text","secondary","AlbumList","albums","container","map","key","AlbumListContainer","setAlbums","useEffect","onSnapshot","snapshot","docChanges","forEach","change","prevAlbums","modifiedAlbum","newAlbums","moditiedAlbumIndex","findIndex","splice","removedId","prevState","filter","memory","LogIn","uiConfig","firebaseAuth","icon","alignContent","cursor","EditModal","prevImageName","imageName","formData","setFormData","updateMemoryData","image","imageFile","Math","floor","random","ref","put","on","progress","round","bytesTransferred","totalBytes","deleteImage","child","getDownloadURL","url","date","location","words","multiline","defaultValue","textField","helperText","acceptedFiles","dropzoneText","filesLimit","files","undefined","MemorySettingMenu","maxWidth","media","expandOpen","avatar","red","caption","Memory","handleClickOpen","CardMedia","initialState","Subnav","albumName","submitData","Breadcrumbs","separator","Link","href","MemoryList","memories","setMemories","uploadImage","length","MemoriesListContainer","albumDetail","setAlbumDetail","fetchAlbumDetail","a","get","res","useParams","prevMemories","modifiedMemory","newMemories","moditiedMemoryIndex","Profile","mainImage","backgroundImage","keepMemoriesImage","backgroundSize","backgroundRepeat","CenteredGrid","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","App","onAuthStateChanged","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,2C,0dCczCC,IAASC,cAXY,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAMMR,UAASS,YAEXC,EAAUV,IAASU,UAEnBC,EAAOX,IAASW,K,QCbhBC,EALIC,IAAMC,cAAc,CACnCC,KAAM,KACNC,QAAS,eCYE,SAASC,IAAe,IAC9BF,EAAQF,IAAMK,WAAWN,GAAzBG,KAEPI,QAAQC,IAAIL,GAHwB,MAIQM,oBAAS,GAJjB,mBAI7BC,EAJ6B,KAIbC,EAJa,OAMFF,mBAAS,CACzCG,KAAM,GACNC,OAAQV,EAAKW,IACbC,aAAc,KAToB,mBAM7BC,EAN6B,KAMlBC,EANkB,KA4B9BC,EAAW,SAAAC,GACfA,EAAEC,iBACFC,EAAGC,WAAW,UAAUC,IAAIP,IA9BM,EAiCZf,IAAMQ,UAAS,GAjCH,mBAiC7Be,EAjC6B,KAiCvBC,EAjCuB,KAuC9BC,EAAc,WAClBD,GAAQ,IAIV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAYC,aAAW,4BAA4BC,MAAM,UAAUC,QAX/C,WACtBL,GAAQ,KAWJ,kBAACM,EAAA,EAAD,CAAOC,aAAc,EAAGH,MAAM,aAC5B,kBAAC,IAAD,QAGJ,kBAACI,EAAA,EAAD,CAAQT,KAAMA,EAAMU,QAASR,EAAaS,kBAAgB,qBACxD,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,mBACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yFAGA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPL,GAAG,OACHM,MAAM,aACNC,KAAK,OACLC,WAAS,EACTC,SAAU,SAAA3B,GAAC,OAnDA,SAACA,GACpBF,EAAa,2BAAKD,GAAN,IAAiBJ,KAAMO,EAAE4B,OAAOC,MAAOjC,aAAc,IAAIkC,QAkD9CC,CAAa/B,OAGhC,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQtB,QAASJ,EAAaG,MAAM,WAApC,UAGA,kBAACuB,EAAA,EAAD,CAAQtB,QAAS,SAAAX,GAAC,OAtDL,SAACA,GACpBO,IACAR,EAASC,GACTF,EAAa,CACXL,KAAM,GACNC,OAAQV,EAAKW,IACbC,aAAc,KAGhBJ,GAAkB,GA6CU0C,CAAalC,IAAIU,MAAM,WAA7C,SAKHnB,EAAiB,kBAAC,IAAD,CAAU4C,GAAG,MAAS,M,8BCrExCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJC,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,KAAM,CACJC,eAAgB,OAChBvC,MAAO,QAGTwC,OAAO,aACLC,SAAU,WACVC,aAAcd,EAAMe,MAAMD,aAC1BE,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,MAEpDhB,YAAaJ,EAAMK,QAAQ,GAC3BgB,WAAY,EACZC,MAAO,QACNtB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BY,WAAYrB,EAAMK,QAAQ,GAC1BiB,MAAO,SAGXC,WAAY,CACVC,QAASxB,EAAMK,QAAQ,EAAG,GAC1BoB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfnB,QAAS,OACToB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTzD,MAAO,WAET0D,WAAW,aACTN,QAASxB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhC0B,YAAY,cAAD,OAAgB/B,EAAMK,QAAQ,GAA9B,OACX2B,WAAYhC,EAAMiC,YAAYC,OAAO,SACrCZ,MAAO,QACNtB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5Ba,MAAO,SAGXa,eAAe,aACb5B,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb6B,cAAc,aACZ7B,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,aAOA,SAAS8B,IACtB,IAAMC,EAAUxC,IADe,EAECtD,IAAMQ,SAAS,MAFhB,mBAExBuF,EAFwB,KAEdC,EAFc,OAGqBhG,IAAMQ,SAAS,MAHpC,mBAGxByF,EAHwB,KAGJC,EAHI,KAKvBhG,EAASF,IAAMK,WAAWN,GAA1BG,KAEFiG,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE7BK,EAAUC,cAERC,EAAwB,SAACC,GAC7BT,EAAYS,EAAMC,gBAGdC,EAAwB,WAC5BT,EAAsB,OAGlBU,EAAkB,WACtBZ,EAAY,MACZW,KAiBIE,EAAS,8BACTC,EACJ,kBAACC,EAAA,EAAD,CACEhB,SAAUA,EACViB,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C9E,GAAIyE,EACJM,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChD3F,KAAM4E,EACNlE,QAAS2E,GAET,kBAAC,IAAD,CAAMvD,GAAG,WAAWgE,MAAO,CAAClD,eAAgB,OAAQvC,MAAO,YACzD,kBAAC0F,EAAA,EAAD,CAAUzF,QAAS+E,GAAnB,YAEF,kBAAC,IAAD,CAAMvD,GAAG,WAAWgE,MAAO,CAAClD,eAAgB,OAAQvC,MAAO,YACzD,kBAAC0F,EAAA,EAAD,CAAUzF,QAAS+E,GAAnB,eAGF,kBAACU,EAAA,EAAD,CAAUzF,QA5BO,WACnB/B,IAAOyH,UAAUC,MAAK,WACpBlH,QAAQC,IAAIL,GACZoG,EAAQmB,KAAK,QACZC,OAAM,SAAUC,GACjBrH,QAAQC,IAAI,kBAAmBoH,MAEjCf,MAqBE,YAKEgB,EACJ,kBAACb,EAAA,EAAD,CACEhB,SAAUE,EACVe,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C9E,GALiB,qCAMjB+E,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChD3F,KAAM8E,EACNpE,QAAS0E,GAET,kBAACW,EAAA,EAAD,KACE,kBAAC5F,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,MAAM,WAC9C,kBAACE,EAAA,EAAD,CAAOF,MAAM,aACX,kBAAC,IAAD,QAGJ,2CAEF,kBAAC0F,EAAA,EAAD,KACE,kBAAC5F,EAAA,EAAD,CAAYC,aAAW,mBAAmBC,MAAM,WAC9C,kBAACE,EAAA,EAAD,CAAOF,MAAM,aACX,kBAAC,IAAD,QAGJ,yCAEF,kBAAC0F,EAAA,EAAD,KACE,kBAAC5F,EAAA,EAAD,CAAYC,aAAW,4BAA4BC,MAAM,WACvD,kBAACE,EAAA,EAAD,CAAOC,aAAc,EAAGH,MAAM,aAC5B,kBAAC,IAAD,QAGJ,6CAEF,kBAAC0F,EAAA,EAAD,CAAUzF,QAAS2E,GACjB,kBAAC9E,EAAA,EAAD,CACEC,aAAW,0BACXkG,gBAAc,8BACdC,gBAAc,OACdlG,MAAM,WAEN,kBAAC,IAAD,OAEF,wCAKN,OACE,yBAAKmG,UAAWjC,EAAQrC,MACtB,kBAACuE,EAAA,EAAD,CAAQ3D,SAAS,UACf,kBAAC4D,EAAA,EAAD,KAUE,kBAACC,EAAA,EAAD,CAAYH,UAAWjC,EAAQhC,MAAOqE,QAAQ,KAAKC,QAAM,IAKzD,kBAACF,EAAA,EAAD,CAAYH,UAAWjC,EAAQhC,MAAOqE,QAAQ,KAAKC,QAAM,GACvD,kBAAC,IAAD,CAAM/E,GAAG,IAAI0E,UAAWjC,EAAQ5B,MAAhC,eAIF,yBAAK6D,UAAWjC,EAAQ1B,QACtB,yBAAK2D,UAAWjC,EAAQf,YACtB,kBAAC,IAAD,OAEF,kBAACsD,EAAA,EAAD,CACEC,YAAY,eACZxC,QAAS,CACPyC,KAAMzC,EAAQT,UACdmD,MAAO1C,EAAQR,YAEjBmD,WAAY,CAAE,aAAc,aAGhC,yBAAKV,UAAWjC,EAAQrC,OACxB,yBAAKsE,UAAWjC,EAAQH,kBACrBzF,GACD,oCACA,kBAACwB,EAAA,EAAD,CAAYC,aAAW,kBAAkBC,MAAM,WAC7C,kBAACE,EAAA,EAAD,CAAOF,MAAM,aACX,kBAAC,IAAD,QAGJ,kBAACxB,EAAD,MACA,kBAACsB,EAAA,EAAD,CAAYC,aAAW,4BAA4BC,MAAM,WACvD,kBAACE,EAAA,EAAD,CAAOC,aAAc,EAAGH,MAAM,aAC5B,kBAAC,IAAD,SAKD1B,EACD,kBAACwB,EAAA,EAAD,CACEgH,KAAK,MACL/G,aAAW,0BACXkG,gBAAehB,EACfiB,gBAAc,OACdjG,QAAS2E,EACT5E,MAAM,WAEN,kBAAC,IAAD,OAGF,kBAACF,EAAA,EAAD,CACEgH,KAAK,MACL/G,aAAW,0BACXmG,gBAAc,OACdjG,QAAS,kBAAMyE,EAAQmB,KAAK,WAC5B7F,MAAM,WAEN,kBAAC,IAAD,QAIN,yBAAKmG,UAAWjC,EAAQF,eACtB,kBAAClE,EAAA,EAAD,CACEC,aAAW,YACXkG,gBAhIS,qCAiITC,gBAAc,OACdjG,QAtKiB,SAAC4E,GAC5BP,EAAsBO,EAAMC,gBAsKlB9E,MAAM,WAEN,kBAAC,IAAD,UAKNgG,EACAd,G,uHCpRO,SAAS6B,GAAT,GAAgE,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,iBAChD5I,EAAQF,IAAMK,WAAWN,GAAzBG,KAEPI,QAAQC,IAAI,2BAA2BL,GAHmC,MAI9BM,oBAAS,GAJqB,mBAInEC,EAJmE,KAInDC,EAJmD,OAMxCF,mBAAS,CACzCG,KAAMT,EAAKS,KACXC,OAAQV,EAAKW,IACbC,aAAc,KAT0D,mBAMnEC,EANmE,KAMxDC,EANwD,KAgB1EV,QAAQC,IAAI,aAAaQ,GACzB,IAWMgI,EAAY,SAAA7H,GAChBA,EAAEC,iBACFC,EAAGC,WAAW,UAAU2H,IAAIJ,GAASK,OAAOlI,IAQxCU,EAAc,WAChBqH,GAAiB,IAIrB,OAFAxI,QAAQC,IAAI,UAAWsI,GAGrB,6BAME,kBAAC7G,EAAA,EAAD,CAAQT,KAAMsH,EAAU5G,QAASR,EAAaS,kBAAgB,qBAC5D,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,cACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,mDAGA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPL,GAAG,OACHM,MAAM,aACNC,KAAK,OACLC,WAAS,EACTC,SAAU,SAAA3B,GAAC,OAlDA,SAACA,GACpBF,EAAa,2BAAKD,GAAN,IAAiBJ,KAAMO,EAAE4B,OAAOC,MAAOjC,aAAc,IAAIkC,QAiD9CC,CAAa/B,OAGhC,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQtB,QAASJ,EAAaG,MAAM,WAApC,UAGA,kBAACuB,EAAA,EAAD,CAAQtB,QAAS,SAAAX,GAAC,OArDL,SAACA,GACpBO,IACAsH,EAAU7H,GACVF,EAAa,CACXL,KAAM,GACNC,OAAQV,EAAKW,IACbC,aAAc,KAGhBJ,GAAkB,GA4CU0C,CAAalC,IAAIU,MAAM,WAA7C,UAKHnB,EAAiB,kBAAC,IAAD,CAAU4C,GAAG,MAAS,MChFhD,IAAMC,GAAYC,YAAW,CACzB2F,SAAU,CACNrE,WAAY,UAMdsE,GAAaC,aAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAACG,GAAD,OACC,kBAACxC,EAAA,EAAD,eACIyC,UAAW,EACXC,mBAAoB,KACpBzC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBE,gBAAiB,CACbH,SAAU,MACVC,WAAY,UAEZqC,OAING,GAAiBN,cAAW,SAAC5F,GAAD,MAAY,CAC1C+E,KAAM,CACF,UAAW,CACP/D,gBAAiBhB,EAAMkB,QAAQiF,QAAQC,KACvC,sDAAuD,CACnDhI,MAAO4B,EAAMkB,QAAQC,OAAOC,YALrBwE,CASnB9B,KAEW,SAASuC,GAAT,GAA6C,IAAlBjB,EAAiB,EAAjBA,QAASkB,EAAQ,EAARA,MAAQ,EACvB9J,IAAMQ,SAAS,MADQ,mBAChDuF,EADgD,KACtCC,EADsC,KAGjDF,EAAUxC,KAMV7B,EAAc,WAChBuE,EAAY,OAVuC,EAuBXhG,IAAMQ,UAAS,GAvBJ,mBAuB9CuJ,EAvB8C,KAuB/BjB,EAvB+B,KAgCvD,OACI,yBAAKf,UAAWjC,EAAQoD,UACpB,kBAACxH,EAAA,EAAD,CACImG,gBAAc,kBACdC,gBAAc,OACdK,QAAQ,YACRxG,aAAW,WACX+G,KAAK,MACLsB,KAAK,QACLnI,QApCQ,SAAC4E,GACjBT,EAAYS,EAAMC,iBAqCV,kBAAC,IAAD,CAAcuD,SAAS,WAE3B,kBAACd,GAAD,CACI/G,GAAG,kBACH2D,SAAUA,EACVoB,aAAW,EACX5F,KAAM6E,QAAQL,GACd9D,QAASR,GAET,kBAACiI,GAAD,CAAgB7H,QA3BF,WACpBiH,GAAiB,KA2BP,kBAACoB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAUD,SAAS,WAEvB,kBAACE,GAAA,EAAD,CAAcR,QAAQ,UAE1B,kBAACD,GAAD,CAAgB7H,QA7CR,WAChBT,EAAGC,WAAW,UAAU2H,IAAIJ,GAASwB,SAAS5C,MAAK,WACjDlH,QAAQC,IAAI,kCACXmH,OAAM,SAAUC,GACjBrH,QAAQqH,MAAM,4BAA6BA,MAG7ClG,MAuCY,kBAACyI,GAAA,EAAD,KACI,kBAAC,KAAD,CAAYD,SAAS,WAEzB,kBAACE,GAAA,EAAD,CAAcR,QAAQ,aAG9B,kBAAChB,GAAD,CACImB,MAAOA,EACPlB,QAASA,EACTC,SAAUkB,EACVjB,iBAAkBA,KC9GlC,IAAMxF,GAAYC,YAAW,CAC3BgF,KAAM,CACJ8B,SAAU,IACV7F,gBAAiB,WAEnB8F,OAAQ,CACNvG,QAAS,eACTtB,OAAQ,QACR8H,UAAW,cAEbzG,MAAO,CACLmG,SAAU,IAEZO,IAAK,CACHC,aAAc,IAEhBvG,KAAM,CACJC,eAAgB,OAChBvC,MAAO,QAETsH,SAAU,CACRrE,WAAY,QAEd6F,OAAQ,CACNC,cAAe,KAEjBC,QAAS,CACPC,WAAY,OAMD,SAASC,GAAT,GAA2B,IAAVhB,EAAS,EAATA,MACxBhE,EAAUxC,KAGhB,OACE,kBAACyH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAMnD,UAAWjC,EAAQyC,MACvB,kBAAC4C,GAAA,EAAD,CAAaC,gBAAc,EAACrD,UAAWjC,EAAQ4E,QAC7C,kBAACb,GAAD,CAAkBjB,QAASkB,EAAM1H,GAAI0H,MAAOA,KAE9C,kBAACuB,GAAA,EAAD,CAAatD,UAAWjC,EAAQ8E,SAC9B,kBAAC,IAAD,CAAMvH,GAAI,WAAayG,EAAM1H,GAAI2F,UAAWjC,EAAQ5B,MAClD,kBAACgE,EAAA,EAAD,CAAYC,QAAQ,KAAKmD,UAAU,MAChCxB,EAAMyB,KAAK5K,UC/C1B,IAAM2C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,KAAM,CACJ7E,SAAU,EACV8H,UAAW,QAEbnC,MAAO,CACLrE,QAASxB,EAAMK,QAAQ,GACvB4H,UAAW,SACX7J,MAAO4B,EAAMkB,QAAQgH,KAAKC,eAIjB,SAASC,GAAT,GAA8B,IAAVC,EAAS,EAATA,OACzB/F,EAAUxC,KAEhB,OACI,yBAAKyE,UAAWjC,EAAQyC,MACnBsD,EACD,kBAACd,GAAA,EAAD,CAAMe,WAAS,EAACjI,QAAS,GACpBgI,EAAOE,KAAI,SAAAjC,GAAK,OAAI,kBAACgB,GAAD,CAAOhB,MAAOA,EAAOkC,IAAKlC,EAAM1H,SAErD,MC1BD,SAAS6J,KAAsB,IAAD,EACbzL,mBAAS,IADI,mBAClCqL,EADkC,KAC1BK,EAD0B,KAGlChM,EAAQF,IAAMK,WAAWN,GAAzBG,KA+DP,OA7DAiM,qBAAU,WACN/K,EAAGC,WAAW,UAAU+K,YAAW,SAAUC,GAEzCA,EAASC,aAAaC,SAAQ,SAAUC,GACpC,IAAM5L,EAAS4L,EAAOxD,IAAIuC,OAAO3K,OACjC,GAAoB,UAAhB4L,EAAO7J,MAAoB/B,IAAWV,EAAKW,IAAK,CAChD,IAAMiJ,EAAQ,CACV1H,GAAIoK,EAAOxD,IAAI5G,GACfmJ,KAAMiB,EAAOxD,IAAIuC,QAGrBW,GAAU,SAACO,GAAD,4BAAoBA,GAApB,CAAgC3C,OAE9C,GAAoB,aAAhB0C,EAAO7J,MAAuB/B,IAAWV,EAAKW,IAAK,CACnD,IAAM6L,EAAgB,CAClBtK,GAAIoK,EAAOxD,IAAI5G,GACfmJ,KAAMiB,EAAOxD,IAAIuC,QAEnBW,GAAU,SAACO,GACT,IAAIE,EAAS,YAAOF,GACdG,EAAqBD,EAAUE,WACnC,SAAC/C,GAAD,OAAWA,EAAM1H,KAAOoK,EAAOxD,IAAI5G,MAGrC,OADAuK,EAAUG,OAAOF,EAAoB,EAAGF,GACjCC,KAGf,GAAoB,YAAhBH,EAAO7J,MAAsB/B,IAAWV,EAAKW,IAAK,CAClD,IAAMkM,EAAYP,EAAOxD,IAAI5G,GAC7B8J,GAAU,SAACc,GACP1M,QAAQC,IAAIiM,EAAOxD,IAAIuC,QAcvB,IAAIoB,EAAS,YAAOK,GAIpB,OAHAL,EAAYA,EAAUM,QACpB,SAACC,GAAD,OAAYA,EAAO9K,KAAO2K,QAI9BzM,QAAQC,IAAI,+BAO3B,IAKC,kBAACqL,GAAD,CAAWC,OAAQA,I,cCpEZ,SAASsB,GAAT,GAA4B,IAAZC,EAAW,EAAXA,SAE7B,OACE,yBAAK/F,MAAO,CAACoE,UAAW,WACtB,wBAAI1D,UAAU,SAAd,cACA,kBAAC,gBAAD,CAAcqF,SAAUA,EAAUC,aAAcvN,O,oFCShDwD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,KAAM,CACF7E,SAAU,EACVyB,WAAY,UACZF,OAAQ,OACRlB,QAAS,OACTkG,SAAU,SACV7E,eAAgB,iBAEpBiE,MAAO,CACHrE,QAASxB,EAAMK,QAAQ,GACvB4H,UAAW,SACX7J,MAAO4B,EAAMkB,QAAQgH,KAAKC,WAE9BzH,KAAM,CACFH,QAAS,QAEbuJ,KAAM,CACF1J,YAAaJ,EAAMK,QAAQ,IAC3BiB,MAAO,GACPG,OAAQ,IAEZ3D,IAAK,CACDiM,aAAc,SACdC,OAAQ,eAQD,SAASC,GAAT,GAAqE,IAAhDP,EAA+C,EAA/CA,OAAQtE,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBACrDhD,EAAUxC,KACVoK,EAAgBR,EAAO3B,KAAKoC,UAF6C,EAI/C3N,IAAMQ,SAAS0M,EAAO3B,MAJyB,mBAIxEqC,EAJwE,KAI9DC,EAJ8D,KAMzE5K,EAAe,SAAA/B,GACjB,IAAM8K,EAAM9K,EAAE4B,OAAOV,GACfW,EAAQ7B,EAAE4B,OAAOC,MAEvB8K,GAAY,SAAAD,GAAQ,kCACbA,GADa,kBAEf5B,EAAMjJ,QAQTtB,EAAc,WAChBqH,GAAiB,IAefgF,EAAmB,SAACF,GACtB,IAAMG,EAAQH,EAASI,UACjBL,EArBCM,KAAKC,MAAsB,IAAhBD,KAAKE,SAAqB,GAqBb,IAAMJ,EAAMpN,KACxBd,EAAQuO,IAAR,iBAAsBT,IAAaU,IAAIN,GAE/CO,GAAG,iBACV,SAACjC,GAEG,IAAMkC,EAAWN,KAAKO,MAAOnC,EAASoC,iBAAmBpC,EAASqC,WAAc,KAChFpO,QAAQC,IAAI,WAAYgO,MAG5B,SAAC5G,GAEGrH,QAAQC,IAAIoH,MAEhB,WAEIgH,EAAYjB,GAEZ7N,EAAQuO,IAAI,UAAUQ,MAAMjB,GAAWkB,iBAClCrH,MAAK,SAAAsH,GACF1N,EAAGC,WAAW,UAAU2H,IAAIJ,GAASvH,WAAW,YAAY2H,IAAIkE,EAAO9K,IAAI6G,OAAO,CAC9E8F,KAAMnB,EAASmB,KACfC,SAAUpB,EAASoB,SACnBC,MAAOrB,EAASqB,MAChBjB,UAAWc,EACXnB,UAAWA,WAM7BgB,EAAc,SAAChB,GACjB9N,EAAQuO,IAAR,iBAAsBT,IAAavD,SAAS5C,MAAK,WAC7ClH,QAAQC,IAAI,SAAWoN,EAAY,4BACpCjG,OAAM,SAAUC,GACfrH,QAAQC,IAAI,oDAAqDoH,OAYzE,OACI,yBAAKI,UAAWjC,EAAQyC,MACpB,kBAACvG,EAAA,EAAD,CAAQT,KAAMsH,EAAU5G,QAASR,EAAaS,kBAAgB,qBAC1D,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,eACA,kBAACC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CACI2M,WAAS,EACT1M,WAAS,EACTI,WAAS,EACTR,GAAG,QACHzB,KAAK,QACL+B,MAAM,aACNC,KAAK,OACLI,MAAO6K,EAASqB,MAChBpM,SAAUI,IACd,kBAACV,EAAA,EAAD,CACIG,MAAM,WACNN,GAAG,WACHzB,KAAK,WACLwO,aAAa,GACbpH,UAAWjC,EAAQsJ,UACnBC,WAAW,2BACX5M,OAAO,QACPM,MAAO6K,EAASoB,SAChBnM,SAAUI,IAEd,kBAACV,EAAA,EAAD,CACIG,MAAM,IACNC,KAAK,OACLP,GAAG,OACHzB,KAAK,OACLwO,aAAa,GACbpH,UAAWjC,EAAQsJ,UACnBC,WAAW,0BACX5M,OAAO,QACPM,MAAO6K,EAASmB,KAChBlM,SAAUI,IAGd,kBAAC,KAAD,CACIqM,cAAe,CAAC,WAChBC,aAAc,uCACdC,WAAY,EACZzM,MAAO6K,EAASI,UAChBnL,SAAU,SAAC4M,GAAD,OAAW5B,GAAY,SAAAD,GAAQ,kCAAUA,GAAV,IAAoBI,UAAWyB,EAAM,YAGtF,kBAACvM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtB,QAASJ,EAAaG,MAAM,WAApC,UAGA,kBAACuB,EAAA,EAAD,CAAQtB,QA3DJ,gBApDW6N,IAAvB9B,EAASI,UACT5M,EAAGC,WAAW,UAAU2H,IAAIJ,GAASvH,WAAW,YAAY2H,IAAIkE,EAAO9K,IAAI6G,OAAO,CAC9E8F,KAAMnB,EAASmB,KACfC,SAAUpB,EAASoB,SACnBC,MAAOrB,EAASqB,QAEbrB,EAASI,WAChBF,EAAiBF,GAkDrB9E,GAAiB,IAsDyBlH,MAAM,WAApC,WC5KpB,IAAM0B,GAAYC,YAAW,CACzB2F,SAAU,CACNrE,WAAY,UAMdsE,GAAaC,aAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAACG,GAAD,OACC,kBAACxC,EAAA,EAAD,eACIyC,UAAW,EACXC,mBAAoB,KACpBzC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBE,gBAAiB,CACbH,SAAU,MACVC,WAAY,UAEZqC,OAING,GAAiBN,cAAW,SAAC5F,GAAD,MAAY,CAC1C+E,KAAM,CACF,UAAW,CACP/D,gBAAiBhB,EAAMkB,QAAQiF,QAAQC,KACvC,sDAAuD,CACnDhI,MAAO4B,EAAMkB,QAAQC,OAAOC,YALrBwE,CASnB9B,KAEW,SAASqI,GAAT,GAAiD,IAApBzC,EAAmB,EAAnBA,OAAQtE,EAAW,EAAXA,QAAW,EAC3B5I,IAAMQ,SAAS,MADY,mBACpDuF,EADoD,KAC1CC,EAD0C,KAGrDF,EAAUxC,KAMV7B,EAAc,WAChBuE,EAAY,OAV2C,EA4BjBhG,IAAMQ,UAAS,GA5BE,mBA4BpDuJ,EA5BoD,KA4BrCjB,EA5BqC,KAmC3D,OACI,yBAAKf,UAAWjC,EAAQoD,UACpB,kBAACxH,EAAA,EAAD,CACImG,gBAAc,kBACdC,gBAAc,OACdK,QAAQ,YACRxG,aAAW,WACXE,QArCQ,SAAC4E,GACjBT,EAAYS,EAAMC,iBAsCV,kBAAC,IAAD,OAEJ,kBAAC,GAAD,CACItE,GAAG,kBACH2D,SAAUA,EACVoB,aAAW,EACX5F,KAAM6E,QAAQL,GACd9D,QAASR,GAET,kBAAC,GAAD,CAAgBsG,UAAWjC,EAAQxE,IAAKO,QAvB3B,WACrBiH,GAAiB,GACjBrH,MAsBY,kBAACyI,GAAA,EAAD,KACI,kBAAC,KAAD,CAAUD,SAAS,WAEvB,kBAACE,GAAA,EAAD,CAAcR,QAAQ,UAE1B,kBAAC,GAAD,CAAgB9H,QA9CD,WACvBT,EAAGC,WAAW,UAAU2H,IAAIJ,GAASvH,WAAW,YAAY2H,IAAIkE,EAAO9K,IAAIgI,SAAS5C,MAAK,WACrF3H,EAAQuO,IAAR,iBAAsBlB,EAAO3B,KAAKoC,YAAavD,SAAS5C,MAAK,WACzDlH,QAAQC,IAAI,iCACbmH,OAAM,SAAUC,GACfrH,QAAQC,IAAI,oDAAqDoH,MAErErH,QAAQC,IAAI,qCACbmH,OAAM,SAAUC,GACfrH,QAAQqH,MAAM,4BAA6BA,MAG/ClG,MAmCY,kBAACyI,GAAA,EAAD,KACI,kBAAC,KAAD,CAAYD,SAAS,WAEzB,kBAACE,GAAA,EAAD,CAAcR,QAAQ,aAG9B,kBAAC8D,GAAD,CACIP,OAAQA,EACRtE,QAASA,EACTC,SAAUkB,EACVjB,iBAAkBA,KC7GlC,IAAMxF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+E,KAAM,CACJqH,SAAU,KAEZC,MAAO,CACL5K,OAAQ,EACR4F,WAAY,UAEd3B,SAAU,CACRrE,WAAY,QAEdiL,WAAY,CACVvF,UAAW,kBAEbwF,OAAQ,CACNvL,gBAAiBwL,KAAI,MAEvBC,QAAS,CACPrM,YAAa,WAMF,SAASsM,GAAT,GAAuD,IAArChD,EAAoC,EAApCA,OAAQtE,EAA4B,EAA5BA,QAASuH,EAAmB,EAAnBA,gBAC1CrK,EAAUxC,KAEhB,OACE,kBAACyH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAMnD,UAAWjC,EAAQyC,MACvB,kBAAC6H,GAAA,EAAD,CACErI,UAAWjC,EAAQ+J,MACnB9B,MAAOb,EAAO3B,KAAKyC,UAAYd,EAAO3B,KAAKyC,UAAY,4FACvDlK,MAAM,gBAER,kBAACuH,GAAA,EAAD,KACE,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,QAAQvG,MAAM,gBAAgB0J,UAAU,KACzD4B,EAAO3B,KAAK0D,QAGjB,kBAAC9D,GAAA,EAAD,CAAaC,gBAAc,GACzB,kBAAC1J,EAAA,EAAD,CAAYC,aAAW,oBACrB,kBAAC,KAAD,OAEF,kBAACuG,EAAA,EAAD,CAAYH,UAAWjC,EAAQmK,QAAS9H,QAAQ,UAAUvG,MAAM,gBAAgB0J,UAAU,KACvF4B,EAAO3B,KAAKyD,UAEf,kBAAC9G,EAAA,EAAD,CAAYH,UAAWjC,EAAQmK,QAAS9H,QAAQ,UAAUvG,MAAM,gBAAgB0J,UAAU,KACvF4B,EAAO3B,KAAKwD,MAEf,kBAACY,GAAD,CACEzC,OAAQA,EACRtE,QAASA,EACTuH,gBAAiBA,O,oFChDvB7M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,KAAM,CACF7E,SAAU,EACVyB,WAAY,UACZF,OAAQ,OACRlB,QAAS,OACTkG,SAAU,SACV7E,eAAgB,iBAEpBiE,MAAO,CACHrE,QAASxB,EAAMK,QAAQ,GACvB4H,UAAW,SACX7J,MAAO4B,EAAMkB,QAAQgH,KAAKC,WAE9BzH,KAAM,CACFH,QAAS,QAEbuJ,KAAM,CACF1J,YAAaJ,EAAMK,QAAQ,IAC3BiB,MAAO,GACPG,OAAQ,IAEZ3D,IAAK,CACDiM,aAAc,SACdC,OAAQ,eAKV6C,GAAe,CACjBpB,MAAO,KACPD,SAAU,KACVD,KAAM,KACNf,UAAW,MAGA,SAASsC,GAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WAClC1K,EAAUxC,KADsC,EAGtBtD,IAAMQ,SAAS6P,IAHO,mBAG/CzC,EAH+C,KAGrCC,EAHqC,KAKhD5K,EAAe,SAAA/B,GACjB,IAAM8K,EAAM9K,EAAE4B,OAAOV,GACfW,EAAQ7B,EAAE4B,OAAOC,MAEvB8K,GAAY,SAAAD,GAAQ,kCACbA,GADa,kBAEf5B,EAAMjJ,QAXuC,EAgB9B/C,IAAMQ,UAAS,GAhBe,mBAgB/Ce,EAhB+C,KAgBzCC,EAhByC,KAsBhDC,EAAc,WAChBD,GAAQ,IASZ,OACI,yBAAKuG,UAAWjC,EAAQyC,MACpB,kBAACkI,GAAA,EAAD,CAAa9O,aAAW,aAAa+O,UAAU,KAC3C,kBAACC,GAAA,EAAD,CAAM/O,MAAM,UAAUgP,KAAK,UAAU7I,UAAWjC,EAAQ5B,MACpD,kBAAC,KAAD,CAAU6D,UAAWjC,EAAQwH,OADjC,UAIA,kBAACpF,EAAA,EAAD,CAAYtG,MAAM,cAAcmG,UAAWjC,EAAQ5B,MAC/C,kBAAC,KAAD,CAAW6D,UAAWjC,EAAQwH,OAC7BiD,IAKT,kBAACrI,EAAA,EAAD,CAAYtG,MAAM,cAAcmG,UAAWjC,EAAQxE,IAAKO,QA5BxC,WACpBL,GAAQ,KA4BA,kBAAC,KAAD,CAASuG,UAAWjC,EAAQwH,OADhC,cAKA,kBAACtL,EAAA,EAAD,CAAQT,KAAMA,EAAMU,QAASR,EAAaS,kBAAgB,qBACtD,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,cACA,kBAACC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CACI2M,WAAS,EACT1M,WAAS,EACTI,WAAS,EACTR,GAAG,QACHzB,KAAK,QACL+B,MAAM,aACNC,KAAK,OACLI,MAAO6K,EAASqB,MAChBpM,SAAUI,IACd,kBAACV,EAAA,EAAD,CACIG,MAAM,WACNN,GAAG,WACHzB,KAAK,WACLwO,aAAa,GACbpH,UAAWjC,EAAQsJ,UACnBC,WAAW,2BACX5M,OAAO,QACPM,MAAO6K,EAASoB,SAChBnM,SAAUI,IAEd,kBAACV,EAAA,EAAD,CACIG,MAAM,IACNC,KAAK,OACLP,GAAG,OACHzB,KAAK,OACLwO,aAAa,GACbpH,UAAWjC,EAAQsJ,UACnBC,WAAW,0BACX5M,OAAO,QACPM,MAAO6K,EAASmB,KAChBlM,SAAUI,IAEd,kBAAC,KAAD,CACIqM,cAAe,CAAC,WAChBC,aAAc,uCACdC,WAAY,EACZ3M,SAAU,SAAC4M,GAAD,OAAW5B,GAAY,SAAAD,GAAQ,kCAASA,GAAT,IAAmBI,UAAWyB,EAAM,YAGrF,kBAACvM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQtB,QAASJ,EAAaG,MAAM,WAApC,UAGA,kBAACuB,EAAA,EAAD,CAAQtB,QAxEJ,WAChB2O,EAAW5C,GACXC,EAAYwC,IACZ7O,GAAQ,IAqEkCI,MAAM,WAApC,UClJpB,IAAM0B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+E,KAAM,CACJ7E,SAAU,OAQC,SAASmN,GAAT,GAKX,IAJFC,EAIC,EAJDA,SACAP,EAGC,EAHDA,UACA3H,EAEC,EAFDA,QACAmI,EACC,EADDA,YAEMjL,EAAUxC,KAKV0N,EAAc,SAACpD,GACnB,IAAMG,EAAQH,EAASI,UACjBL,EAhBDM,KAAKC,MAAsB,IAAhBD,KAAKE,SAAqB,GAgBX,IAAMJ,EAAMpN,KACxBd,EAAQuO,IAAR,iBAAsBT,IAAaU,IAAIN,GAC/CO,GACT,iBACA,SAACjC,GAEC,IAAMkC,EAAWN,KAAKO,MACnBnC,EAASoC,iBAAmBpC,EAASqC,WAAc,KAEtDpO,QAAQC,IAAI,WAAYgO,MAE1B,SAAC5G,GAECrH,QAAQC,IAAIoH,MAEd,WAEE9H,EACGuO,IAAI,UACJQ,MAAMjB,GACNkB,iBACArH,MAAK,SAACsH,GACL1N,EAAGC,WAAW,UACX2H,IAAIJ,GACJvH,WAAW,YACXC,IAHH,2BAGYsM,GAHZ,IAGsBI,UAAWc,EAAKnB,UAAWA,KACjDrN,QAAQC,IAAI,MAAOuO,UAlC5B,EAuCuB9O,IAAMQ,UAAS,GAvCtC,mBAuCYgB,GAvCZ,WAyCK2O,EAAkB,WACtB3O,GAAQ,IAEV,OACE,yBAAKuG,UAAWjC,EAAQyC,MACtB,kBAAC+H,GAAD,CAAQC,UAAWA,EAAWC,WA3Cf,SAAC5C,GAClBoD,EAAYpD,MA4CTkD,GAAYA,EAASG,OAAS,EAE7B,kBAAClG,GAAA,EAAD,CAAMe,WAAS,EAACjI,QAAS,GACtBiN,EAAS/E,KAAI,SAACmB,GAAD,OACZ,kBAACgD,GAAD,CACEhD,OAAQA,EACRlB,IAAKkB,EAAO9K,GACZwG,QAASA,EACTmI,YAAaA,EACbZ,gBAAiBA,QAIrB,MC9EK,SAASe,KAAyB,IAAD,EACd1Q,mBAAS,IADK,mBACvCsQ,EADuC,KAC7BC,EAD6B,OAGRvQ,mBAAS,IAHD,mBAGvC2Q,EAHuC,KAG1BC,EAH0B,KAKxCC,EAAgB,yCAAG,6BAAAC,EAAA,sEACLlQ,EAAGC,WAAW,UAAU2H,IAAIJ,GAAS2I,MADhC,OACjBC,EADiB,OAEvBJ,EAAeI,EAAIjG,QAFI,2CAAH,qDAItBY,qBAAU,WACRkF,MACC,IAX2C,IAaxCzI,EAAY6I,cAAZ7I,QA8CN,OA5CAuD,qBAAU,WACR/K,EAAGC,WAAW,UACX2H,IAAIJ,GACJvH,WAAW,YACX+K,YAAW,SAAUC,GACpBA,EAASC,aAAaC,SAAQ,SAAUC,GAEtC,GAAoB,UAAhBA,EAAO7J,KAAkB,CAC3B,IAAMuK,EAAS,CACb9K,GAAIoK,EAAOxD,IAAI5G,GACfmJ,KAAMiB,EAAOxD,IAAIuC,QAEnBwF,GAAY,SAACW,GAAD,4BAAsBA,GAAtB,CAAoCxE,OAGlD,GAAoB,aAAhBV,EAAO7J,KAAqB,CAC9B,IAAMgP,EAAiB,CACrBvP,GAAIoK,EAAOxD,IAAI5G,GACfmJ,KAAMiB,EAAOxD,IAAIuC,QAEnBwF,GAAY,SAACW,GACX,IAAIE,EAAW,YAAOF,GAChBG,EAAsBD,EAAY/E,WACtC,SAACK,GAAD,OAAYA,EAAO9K,KAAOoK,EAAOxD,IAAI5G,MAGvC,OADAwP,EAAY9E,OAAO+E,EAAqB,EAAGF,GACpCC,KAGX,GAAoB,YAAhBpF,EAAO7J,KAAoB,CAC7B,IAAMoK,EAAYP,EAAOxD,IAAI5G,GAC7B2O,GAAY,SAAC/D,GACX,IAAI4E,EAAW,YAAO5E,GAItB,OAHA4E,EAAcA,EAAY3E,QACxB,SAACC,GAAD,OAAYA,EAAO9K,KAAO2K,QAI9BzM,QAAQC,IAAI,mCAInB,IAGD,kBAAC,GAAD,CACEuQ,SAAUA,EACVP,UAAWY,EAAcA,EAAYxQ,KAAO,KAC5CiI,QAASA,EACTmI,YAAaA,IChEJ,SAASe,GAAQ5R,GAsB5B,OACI,6BACI,yC,yBCpBNoD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,KAAM,CACF7E,SAAU,GAEd2F,MAAO,CACHrE,QAASxB,EAAMK,QAAQ,GACvB4H,UAAW,SACX7J,MAAO4B,EAAMkB,QAAQgH,KAAKC,UAC1B1G,OAAQ,qBACRM,YAAa,OACbiG,UAAW,OAEfuG,UAAW,CACP9M,OAAQ,qBACR+M,gBAAgB,OAAD,OAASC,KAAT,KACfC,eAAgB,UAChBC,iBAAkB,aAEtBzG,KAAM,CACFjJ,OAAQ,cAID,SAAS2P,KACpB,IAAMtM,EAAUxC,KAEZgD,EAAUC,cAEd,OACI,yBAAKwB,UAAWjC,EAAQyC,MACpB,kBAACwC,GAAA,EAAD,CAAMe,WAAS,EAACjI,QAAS,GACrB,kBAACkH,GAAA,EAAD,CAAMC,MAAI,EAACjD,UAAWjC,EAAQuD,MAAO4B,GAAI,GACrC,kBAAC/C,EAAA,EAAD,CAAYC,QAAQ,KAAKmD,UAAU,MAAnC,sBAGA,kBAACpD,EAAA,EAAD,CAAYC,QAAQ,QAAQmD,UAAU,KAAKvD,UAAWjC,EAAQ4F,MAA9D,kEAGA,kBAACvI,EAAA,EAAD,CAAQgF,QAAQ,YAAYvG,MAAM,UAAUC,QAAS,kBAAMyE,EAAQmB,KAAK,YAAxE,mBAIJ,kBAACsD,GAAA,EAAD,CAAMC,MAAI,EAACjD,UAAWjC,EAAQiM,UAAW9G,GAAI,MClC7D,IAAMmC,GAAW,CACfiF,WAAY,QACZC,cAAe,CAEbxS,EAAKyS,mBAAmBC,YACxB1S,EAAK2S,qBAAqBD,YAG1B1S,EAAK4S,kBAAkBF,aAIzBG,UAAW,CACTC,4BAA6B,kBAAM,KAyDxBC,OArDf,WAAgB,IAAD,EACW7S,IAAMQ,SAAS,MAD1B,mBACNN,EADM,KACAC,EADA,KAab,OAXAG,QAAQC,IAAI,QAASL,GAGrBF,IAAMmM,WAAU,WACdrM,IAAOgT,oBAAmB,SAAA5S,GACxBC,EAAQD,GACRI,QAAQC,IAAI,gBAAiBL,QAE9B,IAID,kBAAC,EAAW6S,SAAZ,CAAqBhQ,MAAO,CAAE7C,OAAMC,YAClC,kBAAC,IAAD,KACE,yBAAK4H,UAAU,OACb,kBAAClC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmN,OAAK,EAACC,KAAK,UACb/S,EACD,kBAAC,IAAD,CAAUmD,GAAG,YAEb,kBAAC8J,GAAD,CAAOC,SAAUA,MAGrB,kBAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,YAChB,kBAACnB,GAAD,OAEF,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAI,WACb/S,EAGA,kBAAC+L,GAAD,MAFA,kBAAC,IAAD,CAAU5I,GAAG,YAKjB,kBAAC,IAAD,CAAO2P,OAAK,EAACC,KAAI,oBACf,kBAAC/B,GAAD,OAEF,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,KACb/S,EACD,kBAAC,IAAD,CAAUmD,GAAG,YAEb,kBAAC,GAAD,YCrEhB6P,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.2c450248.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/keep-memories.10c54587.png\";","import firebase from \"firebase\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA2KSAEEMSU656axPkpDvH4XtkknRWCDiE\",\r\n    authDomain: \"my-memories-8ff66.firebaseapp.com\",\r\n    databaseURL: \"https://my-memories-8ff66.firebaseio.com\",\r\n    projectId: \"my-memories-8ff66\",\r\n    storageBucket: \"my-memories-8ff66.appspot.com\",\r\n    messagingSenderId: \"589160303203\",\r\n    appId: \"1:589160303203:web:b49a66af2f303550634656\"\r\n  };\r\n  // Initialize Firebase\r\n  // export const fire =firebase.initializeApp(firebaseConfig);\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export default firebase.firestore();\r\n\r\n  export const storage = firebase.storage();\r\n\r\n  export const auth = firebase.auth;\r\n  ","import React from 'react';\r\n\r\nconst AppContext = React.createContext({\r\n    user: null,\r\n    setUser: () => {}\r\n});\r\n\r\nexport default AppContext;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport db from \"../../../firebaseConfig\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AppContext from '../../../components/AppContext'\r\n\r\n//create a new collection in the database\r\nexport default function AddNewAlbum() {\r\n  const {user} = React.useContext(AppContext);\r\n\r\n  console.log(user);\r\n  const [shouldRedirect, setShouldRedirect] = useState(false);\r\n\r\n  const [userInput, setUserInput] = useState({\r\n    name: \"\",\r\n    userId: user.uid,\r\n    creationDate: \"\"\r\n  });\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput({ ...userInput, name: e.target.value, creationDate: new Date() })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    handleClose();\r\n    addAlbum(e);\r\n    setUserInput({\r\n      name: \"\",\r\n      userId: user.uid,\r\n      creationDate: \"\"\r\n    });\r\n\r\n    setShouldRedirect(true);\r\n  }\r\n  const addAlbum = e => {\r\n    e.preventDefault()\r\n    db.collection('Albums').add(userInput)\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={handleClickOpen}>\r\n        <Badge badgeContent={0} color=\"secondary\">\r\n          <AddCircleIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add a new album</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To create a new collection of memories, please enter a name for your album here.\r\n            </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Album name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n            </Button>\r\n          <Button onClick={e => handleSubmit(e)} color=\"primary\">\r\n            Add\r\n            </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {shouldRedirect ? <Redirect to=\"/\" /> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport AddNewAlbum from \"./components/AddNewAlbum\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { auth } from '../../firebaseConfig'\r\nimport AppContext from '../../components/AppContext'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#fff',\r\n\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const { user } = React.useContext(AppContext)\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  let history = useHistory()\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    auth().signOut().then(function () {\r\n      console.log(user);\r\n      history.push('/')\r\n    }).catch(function (error) {\r\n      console.log(\"cannot sign out\", error);\r\n    });\r\n    handleMenuClose();\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <Link to=\"/profile\" style={{textDecoration: 'none', color: 'inherit'}}>\r\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      </Link>\r\n      <Link to=\"/setting\" style={{textDecoration: 'none', color: 'inherit'}}>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      </Link>\r\n      {/* If there is a user show log out, otherwise log in */}\r\n      <MenuItem onClick={handleLogout}>Log Out</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <ShareIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Share Board</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge color=\"secondary\">\r\n            <AddCircleIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Add Board</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          {/* should log out/log  */}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n\r\n\r\n\r\n          </Typography>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            <Link to=\"/\" className={classes.link}>\r\n              MyMemories\r\n            </Link>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n          {!!user && (\r\n            <>\r\n            <IconButton aria-label=\"share the board\" color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ShareIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <AddNewAlbum />\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            </>\r\n          )}\r\n            {!!user ?\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              :\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                onClick={() => history.push('/login')}\r\n                color=\"inherit\"\r\n              >\r\n                <ExitToAppIcon />\r\n              </IconButton>\r\n            }\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      { renderMobileMenu}\r\n      { renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport db from \"../../../firebaseConfig\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AppContext from '../../../components/AppContext'\r\n// album={album}\r\n//                 albumId={albumId}\r\n//                 openEdit={openEditModal}\r\n//                 setOpenEditModal={setOpenEditModal}\r\nexport default function EditModalAlbum({albumId, openEdit, setOpenEditModal}) {\r\n    const {user} = React.useContext(AppContext);\r\n\r\n    console.log(\"user in edit modal Album\",user);\r\n    const [shouldRedirect, setShouldRedirect] = useState(false);\r\n  \r\n    const [userInput, setUserInput] = useState({\r\n      name: user.name,\r\n      userId: user.uid,\r\n      creationDate: \"\"\r\n    });\r\n  \r\n  \r\n    const handleChange = (e) => {\r\n      setUserInput({ ...userInput, name: e.target.value, creationDate: new Date() })\r\n    }\r\n    console.log(\"user input\",userInput);\r\n    const handleSubmit = (e) => {\r\n      handleClose();\r\n      editAlbum(e);\r\n      setUserInput({\r\n        name: \"\",\r\n        userId: user.uid,\r\n        creationDate: \"\"\r\n      });\r\n  \r\n      setShouldRedirect(true);\r\n    }\r\n    const editAlbum = e => {\r\n      e.preventDefault()\r\n      db.collection('Albums').doc(albumId).update(userInput)\r\n    }\r\n \r\n   \r\n    // const handleEditClickOpen = () => {\r\n    //   setOpen(true);\r\n    // };\r\n  \r\n    const handleClose = () => {\r\n        setOpenEditModal(false);\r\n    };\r\n    console.log(\"is open\", openEdit)\r\n  \r\n    return (\r\n      <div>\r\n        {/* <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" onClick={handleEditClickOpen}>\r\n          <Badge badgeContent={0} color=\"secondary\">\r\n            <AddCircleIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <Dialog open={openEdit} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">Edit album</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please enter a rename for your album here.\r\n              </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Album name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={e => handleChange(e)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n              </Button>\r\n            <Button onClick={e => handleSubmit(e)} color=\"primary\">\r\n              Edit\r\n              </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {shouldRedirect ? <Redirect to=\"/\" /> : null}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  ","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport db from \"../../../firebaseConfig\";\r\nimport EditModalAlbum from \"./EditModalAlbum\"\r\n\r\nconst useStyles = makeStyles({\r\n    settings: {\r\n        marginLeft: 'auto',\r\n    },\r\n\r\n});\r\n\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function AlbumSettingMenu({albumId, album}) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const deleteAlbum = () => {\r\n        db.collection(\"Albums\").doc(albumId).delete().then(function () {\r\n          console.log(\"Album successfully deleted!\");\r\n        }).catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        })\r\n\r\n        handleClose()\r\n      }\r\n\r\n      const [openEditModal, setOpenEditModal] = React.useState(false);\r\n\r\n      const handleEditAlbum = () => {\r\n          setOpenEditModal(true);\r\n        \r\n           \r\n      };\r\n     \r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <IconButton\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                aria-label=\"settings\"\r\n                edge=\"end\"\r\n                size=\"small\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem onClick={handleEditAlbum} >\r\n                    <ListItemIcon  >\r\n                        <EditIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Edit\" />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={deleteAlbum}>\r\n                    <ListItemIcon>\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Delete\" />\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n            <EditModalAlbum\r\n                album={album}\r\n                albumId={albumId}\r\n                openEdit={openEditModal}\r\n                setOpenEditModal={setOpenEditModal}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport AlbumSettingMenu from './components/AlbumSettingMenu'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: '#caf0ff'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  settings: {\r\n    marginLeft: 'auto',\r\n  },\r\n  header: {\r\n    paddingBottom: '0'\r\n  },\r\n  content: {\r\n    paddingTop: '0'\r\n  },\r\n\r\n});\r\n\r\n\r\nexport default function Album({ album }) {\r\n  const classes = useStyles();\r\n  //when we click the card we should go to the memories list \r\n\r\n  return (\r\n    <Grid item xs={3}>\r\n      <Card className={classes.root} >\r\n        <CardActions disableSpacing className={classes.header}>\r\n          <AlbumSettingMenu albumId={album.id} album={album} />\r\n        </CardActions>\r\n        <CardContent className={classes.content}>\r\n          <Link to={'/albums/' + album.id} className={classes.link}>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {album.data.name}\r\n            </Typography>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport Album from \"./Album\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//display albums imported from database\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: '20px'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n  \r\nexport default function AlbumList({albums}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {albums? (\r\n            <Grid container spacing={3}>\r\n                {albums.map(album => <Album album={album} key={album.id}/>)}\r\n            </Grid>\r\n            ) : null}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport db from '../firebaseConfig';\r\nimport AlbumList from \"../components/Album/AlbumList\";\r\nimport AppContext from '../components/AppContext'\r\n\r\nexport default function AlbumListContainer() {\r\n    const [albums, setAlbums] = useState([])\r\n    \r\n    const {user} = React.useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"Albums\").onSnapshot(function (snapshot) {\r\n            \r\n            snapshot.docChanges().forEach(function (change) {\r\n                const userId = change.doc.data().userId\r\n                if (change.type === \"added\" && userId === user.uid) {\r\n                    const album = {\r\n                        id: change.doc.id,\r\n                        data: change.doc.data()\r\n                    }\r\n\r\n                    setAlbums((prevAlbums) => [...prevAlbums, album]);\r\n                }\r\n                if (change.type === \"modified\" && userId === user.uid) {\r\n                    const modifiedAlbum = {\r\n                        id: change.doc.id,\r\n                        data: change.doc.data(),\r\n                      };\r\n                      setAlbums((prevAlbums) => {\r\n                        let newAlbums = [...prevAlbums];\r\n                        const moditiedAlbumIndex = newAlbums.findIndex(\r\n                          (album) => album.id === change.doc.id\r\n                        );\r\n                        newAlbums.splice(moditiedAlbumIndex, 1, modifiedAlbum);\r\n                        return newAlbums;\r\n                      });\r\n                }\r\n                if (change.type === \"removed\" && userId === user.uid) {\r\n                    const removedId = change.doc.id;\r\n                    setAlbums((prevState) => {\r\n                        console.log(change.doc.data())\r\n                        //remove the subcollection of that album \r\n                        // db.collection(\"Albums\").doc(removedId).collection(\"Memories\").delete().then(function () {\r\n                        //     storage.ref(`images/${memory.data.imageName}`).delete().then(function () {\r\n                        //         console.log('image deleted successfully');\r\n                        //     }).catch(function (error) {\r\n                        //         console.log('Uh-oh, an error occurred while deleting the image', error);\r\n                        //     });\r\n                        //     console.log(\"Document successfully deleted!\");\r\n                        // }).catch(function (error) {\r\n                        //     console.error(\"Error removing document: \", error);\r\n                        // })\r\n\r\n                        //display the other albums\r\n                        let newAlbums = [...prevState];\r\n                        newAlbums = newAlbums.filter(\r\n                          (memory) => memory.id !== removedId\r\n                        );\r\n                        return newAlbums;\r\n                      });\r\n                      console.log(\"Album is removed !\");\r\n                }\r\n               \r\n            });\r\n\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <AlbumList albums={albums} />\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { auth } from \"../../firebaseConfig\";\r\nimport { FirebaseAuth } from \"react-firebaseui\"\r\n\r\nexport default function LogIn({uiConfig}) {\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h2 className=\"title\">Sign In/Up</h2>\r\n      <FirebaseAuth uiConfig={uiConfig} firebaseAuth={auth()} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport db, { storage } from \"../../../firebaseConfig\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignItems: 'stretch',\r\n        height: '2rem',\r\n        display: 'flex',\r\n        fontSize: '1.2rem',\r\n        justifyContent: 'space-between',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n        display: 'flex',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    add: {\r\n        alignContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function EditModal({ memory, albumId, openEdit, setOpenEditModal }) {\r\n    const classes = useStyles();\r\n    const prevImageName = memory.data.imageName;\r\n\r\n    const [formData, setFormData] = React.useState(memory.data)\r\n\r\n    const handleChange = e => {\r\n        const key = e.target.id;\r\n        const value = e.target.value\r\n\r\n        setFormData(formData => ({\r\n            ...formData,\r\n            [key]: value\r\n        }));\r\n    }\r\n\r\n    const randomId = () => {\r\n        return Math.floor(Math.random() * 1000000 + 1)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenEditModal(false);\r\n    };\r\n\r\n    const updateMemory = () => {\r\n        if (formData.imageFile === undefined) {\r\n            db.collection(\"Albums\").doc(albumId).collection(\"Memories\").doc(memory.id).update({\r\n                date: formData.date,\r\n                location: formData.location,\r\n                words: formData.words\r\n            })\r\n        } else if (formData.imageFile) {\r\n            updateMemoryData(formData)\r\n        }\r\n    }\r\n\r\n    const updateMemoryData = (formData) => {\r\n        const image = formData.imageFile;\r\n        const imageName = randomId() + '-' + image.name;\r\n        const uploadTask = storage.ref(`images/${imageName}`).put(image);\r\n\r\n        uploadTask.on('state_changed',\r\n            (snapshot) => {\r\n                // progrss function ....\r\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                console.log(\"progress\", progress);\r\n                \r\n            },\r\n            (error) => {\r\n                // error function ....\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                // complete function ....\r\n                deleteImage(prevImageName);\r\n\r\n                storage.ref('images').child(imageName).getDownloadURL()\r\n                    .then(url => {\r\n                        db.collection(\"Albums\").doc(albumId).collection(\"Memories\").doc(memory.id).update({\r\n                            date: formData.date,\r\n                            location: formData.location,\r\n                            words: formData.words,\r\n                            imageFile: url,\r\n                            imageName: imageName\r\n                        })\r\n                    })\r\n            });\r\n    }\r\n\r\n    const deleteImage = (imageName) => {\r\n        storage.ref(`images/${imageName}`).delete().then(function () {\r\n            console.log('image ' + imageName + ' deleted successfully');\r\n        }).catch(function (error) {\r\n            console.log('Uh-oh, an error occurred while deleting the image', error);\r\n        });\r\n    }\r\n\r\n    const handleClick = () => {\r\n        //when we click edit we send the updated data to server\r\n\r\n        updateMemory()\r\n\r\n        setOpenEditModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog open={openEdit} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit Memory</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        multiline\r\n                        autoFocus\r\n                        fullWidth\r\n                        id=\"words\"\r\n                        name=\"words\"\r\n                        label=\"Some Words\"\r\n                        type=\"text\"\r\n                        value={formData.words}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        label=\"Location\"\r\n                        id=\"location\"\r\n                        name=\"location\"\r\n                        defaultValue=\"\"\r\n                        className={classes.textField}\r\n                        helperText=\"The place of this memory\"\r\n                        margin=\"dense\"\r\n                        value={formData.location}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        label=\" \"\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        defaultValue=\"\"\r\n                        className={classes.textField}\r\n                        helperText=\"The date of this memory\"\r\n                        margin=\"dense\"\r\n                        value={formData.date}\r\n                        onChange={handleChange}\r\n                    />\r\n                    \r\n                    <DropzoneArea\r\n                        acceptedFiles={['image/*']}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        filesLimit={1}\r\n                        value={formData.imageFile}\r\n                        onChange={(files) => setFormData(formData => ({ ...formData, imageFile: files[0] }))}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                </Button>\r\n                    <Button onClick={handleClick} color=\"primary\">\r\n                        Edit\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport db, { storage } from \"../../../firebaseConfig\";\r\nimport EditModal from './EditModal';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    settings: {\r\n        marginLeft: 'auto',\r\n    },\r\n\r\n});\r\n\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'center',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: theme.palette.primary.main,\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function MemorySettingMenu({ memory, albumId }) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDeleteMemory = () => {\r\n        db.collection(\"Albums\").doc(albumId).collection(\"Memories\").doc(memory.id).delete().then(function () {\r\n            storage.ref(`images/${memory.data.imageName}`).delete().then(function () {\r\n                console.log('image deleted successfully');\r\n            }).catch(function (error) {\r\n                console.log('Uh-oh, an error occurred while deleting the image', error);\r\n            });\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch(function (error) {\r\n            console.error(\"Error removing document: \", error);\r\n        })\r\n\r\n        handleClose()\r\n    }\r\n\r\n    const [openEditModal, setOpenEditModal] = React.useState(false);\r\n\r\n    const handleEditMemory = () => {\r\n        setOpenEditModal(true);\r\n        handleClose()\r\n    };\r\n\r\n    return (\r\n        <div className={classes.settings}>\r\n            <IconButton\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                aria-label=\"settings\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem className={classes.add} onClick={handleEditMemory}>\r\n                    <ListItemIcon  >\r\n                        <EditIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Edit\" />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={handleDeleteMemory}>\r\n                    <ListItemIcon>\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Delete\" />\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n            <EditModal\r\n                memory={memory}\r\n                albumId={albumId}\r\n                openEdit={openEditModal}\r\n                setOpenEditModal={setOpenEditModal}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MemorySettingMenu from './components/MemorySettingMenu'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  settings: {\r\n    marginLeft: 'auto',\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  caption: {\r\n    marginRight: '8px',\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport default function Memory({ memory, albumId, handleClickOpen }) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Grid item xs={3}>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={memory.data.imageFile ? memory.data.imageFile : 'https://images.theconversation.com/files/250919/original/file-20181217-185258-1gc7soo.jpg'}\r\n          title=\"Paella dish\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {memory.data.words}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <Typography className={classes.caption} variant=\"caption\" color=\"textSecondary\" component=\"p\">\r\n            {memory.data.location}\r\n          </Typography>\r\n          <Typography className={classes.caption} variant=\"caption\" color=\"textSecondary\" component=\"p\">\r\n            {memory.data.date}\r\n          </Typography>\r\n          <MemorySettingMenu  \r\n            memory={memory}\r\n            albumId={albumId}\r\n            handleClickOpen={handleClickOpen}\r\n          />\r\n          \r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        alignItems: 'stretch',\r\n        height: '2rem',\r\n        display: 'flex',\r\n        fontSize: '1.2rem',\r\n        justifyContent: 'space-between',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n        display: 'flex',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    add: {\r\n        alignContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n\r\n}));\r\n\r\nconst initialState = {\r\n    words: null,\r\n    location: null,\r\n    date: null,\r\n    imageFile: null\r\n}\r\n\r\nexport default function Subnav({ albumName, submitData }) {\r\n    const classes = useStyles();\r\n    \r\n    const [formData, setFormData] = React.useState(initialState)\r\n\r\n    const handleChange = e => {\r\n        const key = e.target.id;\r\n        const value = e.target.value\r\n\r\n        setFormData(formData => ({\r\n            ...formData,\r\n            [key]: value\r\n        }));\r\n    }\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        submitData(formData)\r\n        setFormData(initialState)\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\" separator=\"|\">\r\n                <Link color=\"inherit\" href=\"/albums\" className={classes.link}>\r\n                    <HomeIcon className={classes.icon} />\r\n                    Albums\r\n                </Link>\r\n                <Typography color=\"textPrimary\" className={classes.link}>\r\n                    <GrainIcon className={classes.icon} />\r\n                    {albumName}\r\n                </Typography>\r\n\r\n            </Breadcrumbs>\r\n\r\n            <Typography color=\"textPrimary\" className={classes.add} onClick={handleClickOpen}>\r\n                <AddIcon className={classes.icon} />\r\n                    Add Memory\r\n            </Typography>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New Memory</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField \r\n                        multiline\r\n                        autoFocus \r\n                        fullWidth \r\n                        id=\"words\"\r\n                        name=\"words\"\r\n                        label=\"Some Words\" \r\n                        type=\"text\" \r\n                        value={formData.words}\r\n                        onChange={handleChange} />\r\n                    <TextField\r\n                        label=\"Location\"\r\n                        id=\"location\"\r\n                        name=\"location\"\r\n                        defaultValue=\"\"\r\n                        className={classes.textField}\r\n                        helperText=\"The place of this memory\"\r\n                        margin=\"dense\"\r\n                        value={formData.location}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        label=\" \"\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        defaultValue=\"\"\r\n                        className={classes.textField}\r\n                        helperText=\"The date of this memory\"\r\n                        margin=\"dense\"\r\n                        value={formData.date}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <DropzoneArea\r\n                        acceptedFiles={['image/*']}\r\n                        dropzoneText={\"Drag and drop an image here or click\"}\r\n                        filesLimit={1}\r\n                        onChange={(files) => setFormData(formData => ({...formData, imageFile: files[0]}))}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                </Button>\r\n                    <Button onClick={handleClick} color=\"primary\">\r\n                        Add\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport db, { storage } from \"../../firebaseConfig\";\r\nimport Memory from \"./Memory\";\r\nimport Subnav from \"./Subnav\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst randomId = () => {\r\n  return Math.floor(Math.random() * 1000000 + 1);\r\n};\r\n\r\nexport default function MemoryList({\r\n  memories,\r\n  albumName,\r\n  albumId,\r\n  setMemories,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const submitData = (formData) => {\r\n    uploadImage(formData);\r\n  };\r\n  const uploadImage = (formData) => {\r\n    const image = formData.imageFile;\r\n    const imageName = randomId() + \"-\" + image.name;\r\n    const uploadTask = storage.ref(`images/${imageName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // progrss function ....\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        console.log(\"progress\", progress);\r\n      },\r\n      (error) => {\r\n        // error function ....\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ....\r\n        storage\r\n          .ref(\"images\")\r\n          .child(imageName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection(\"Albums\")\r\n              .doc(albumId)\r\n              .collection(\"Memories\")\r\n              .add({ ...formData, imageFile: url, imageName: imageName });\r\n            console.log(\"url\", url);\r\n          });\r\n      }\r\n    );\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Subnav albumName={albumName} submitData={submitData} />\r\n\r\n      {memories && memories.length > 0 ? (\r\n        // <EditModal memory={memories} albumId={albumId} />\r\n        <Grid container spacing={3}>\r\n          {memories.map((memory) => (\r\n            <Memory\r\n              memory={memory}\r\n              key={memory.id}\r\n              albumId={albumId}\r\n              setMemories={setMemories}\r\n              handleClickOpen={handleClickOpen}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport db from \"../firebaseConfig\";\r\nimport MemoriesList from \"../components/memory/MemoriesList\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function MemoriesListContainer() {\r\n  const [memories, setMemories] = useState([]);\r\n\r\n  const [albumDetail, setAlbumDetail] = useState(\"\");\r\n\r\n  const fetchAlbumDetail = async () => {\r\n    const res = await db.collection(\"Albums\").doc(albumId).get();\r\n    setAlbumDetail(res.data());\r\n  };\r\n  useEffect(() => {\r\n    fetchAlbumDetail();\r\n  }, []);\r\n\r\n  let { albumId } = useParams();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Albums\")\r\n      .doc(albumId)\r\n      .collection(\"Memories\")\r\n      .onSnapshot(function (snapshot) {\r\n        snapshot.docChanges().forEach(function (change) {\r\n          \r\n          if (change.type === \"added\") {\r\n            const memory = {\r\n              id: change.doc.id,\r\n              data: change.doc.data(),\r\n            };\r\n            setMemories((prevMemories) => [...prevMemories, memory]);\r\n           \r\n          }\r\n          if (change.type === \"modified\") {\r\n            const modifiedMemory = {\r\n              id: change.doc.id,\r\n              data: change.doc.data(),\r\n            };\r\n            setMemories((prevMemories) => {\r\n              let newMemories = [...prevMemories];\r\n              const moditiedMemoryIndex = newMemories.findIndex(\r\n                (memory) => memory.id === change.doc.id\r\n              );\r\n              newMemories.splice(moditiedMemoryIndex, 1, modifiedMemory);\r\n              return newMemories;\r\n            });\r\n          }\r\n          if (change.type === \"removed\") {\r\n            const removedId = change.doc.id;\r\n            setMemories((prevState) => {\r\n              let newMemories = [...prevState];\r\n              newMemories = newMemories.filter(\r\n                (memory) => memory.id !== removedId\r\n              );\r\n              return newMemories;\r\n            });\r\n            console.log(\"something is removed !\");\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MemoriesList\r\n      memories={memories}\r\n      albumName={albumDetail ? albumDetail.name : null}\r\n      albumId={albumId}\r\n      setMemories={setMemories}\r\n    />\r\n  );\r\n}\r\n","import React from 'react'\r\nimport firebase from \"../../firebaseConfig\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function Profile(user) {\r\n//     const user = firebase.auth().currentUser;\r\n//     let email,  uid;\r\n\r\n// if (user != null) {\r\n//    email = user.email;\r\n\r\n//      uid = user.uid;  // The user's ID, unique to the Firebase project. Do NOT use\r\n//                    // this value to authenticate with your backend server, if\r\n//                    // you have one. Use User.getToken() instead.\r\n// }\r\n\r\n// const deleteAccount =()=>{\r\n//     return user.delete().then(function() {\r\n//         // User deleted.\r\n//         console.log(\"user deleted successfully\")\r\n//       }).catch(function(error) {\r\n//         // An error happened.\r\n//         console.log(\"there is a problem\")\r\n//       }); \r\n// }\r\n\r\n    return (\r\n        <div>\r\n            <h2>UserName</h2>\r\n            {/* <p>Id: {uid}</p>\r\n            <p>Email: {email}</p>  \r\n\r\n            <h3>Delete account</h3>\r\n            <Button onClick={deleteAccount}>Delete</Button> */}\r\n        </div>\r\n    )\r\n}\r\n//or we can use this to retrieve data from the login, I don't get the difference between the 2 methods\r\n//   user.providerData.forEach(function (profile) {","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport keepMemoriesImage from '../images/keep-memories.png'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        height: 'calc(100vh - 64px)',\r\n        paddingLeft: '60px',\r\n        marginTop: '15%'\r\n    },\r\n    mainImage: {\r\n        height: 'calc(100vh - 64px)',\r\n        backgroundImage: `url(${keepMemoriesImage})`,\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\"\r\n    },\r\n    text: {\r\n        margin: '20px 0'\r\n    }\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n    const classes = useStyles();\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item className={classes.paper} xs={6}>\r\n                    <Typography variant=\"h2\" component=\"h2\">\r\n                        Keep your Memories\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"h2\" className={classes.text}>\r\n                        Save your memories in a safe place and share them with others.\r\n                    </Typography>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/login')}>\r\n                        Start for Free\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item className={classes.mainImage} xs={6}>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from '../components/navbar/Navbar';\r\nimport AlbumListContainer from \"../containers/AlbumListContainer\";\r\nimport LogIn from \"../components/LogIn/LogIn\"\r\nimport MemoriesListContainer from \"./MemoriesListContainer\"\r\nimport Profile from \"../components/profile/Profile\"\r\nimport Home from '../components/Home'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport AppContext from '../components/AppContext'\r\nimport {auth} from '../firebaseConfig'\r\n\r\nconst uiConfig = {\r\n  signInFlow: \"popup\",\r\n  signInOptions: [\r\n    // Leave the lines as is for the providers you want to offer your users.\r\n    auth.GoogleAuthProvider.PROVIDER_ID,\r\n    auth.FacebookAuthProvider.PROVIDER_ID,\r\n    // auth.TwitterAuthProvider.PROVIDER_ID,\r\n    // auth.GithubAuthProvider.PROVIDER_ID,\r\n    auth.EmailAuthProvider.PROVIDER_ID,\r\n    // auth.PhoneAuthProvider.PROVIDER_ID,\r\n\r\n  ],\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: () => false\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState(null);\r\n  console.log(\"first\", user);\r\n\r\n  \r\n  React.useEffect(() => {\r\n    auth().onAuthStateChanged(user => {\r\n      setUser(user);\r\n      console.log(\"app use effct\", user);\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={{ user, setUser }}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              {!!user ?\r\n                <Redirect to=\"/albums\" />\r\n                :\r\n                <LogIn uiConfig={uiConfig} />\r\n              }\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path={`/albums`}>\r\n              {!user ?\r\n                <Redirect to=\"/login\" />\r\n                :\r\n                <AlbumListContainer />\r\n              }\r\n            </Route>\r\n            <Route exact path={`/albums/:albumId`}>\r\n              <MemoriesListContainer />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              {!!user ?\r\n                <Redirect to=\"/albums\" />\r\n                :\r\n                <Home />\r\n              }\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\n\r\n// import { Provider } from 'react-redux';\r\n// import store from './store'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}